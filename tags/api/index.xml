<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on Merthon</title><link>https://merthon.github.io/tags/api/</link><description>Recent content in API on Merthon</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 14 Mar 2025 00:31:47 +0800</lastBuildDate><atom:link href="https://merthon.github.io/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>分布式微博爬虫+API</title><link>https://merthon.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB+api/</link><pubDate>Fri, 14 Mar 2025 00:31:47 +0800</pubDate><guid>https://merthon.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB+api/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>WeiboScraper是采用Python后端开发和爬虫能力设计的一个项目，目标是爬取微博公开的话题数据，存下来做简单分析，再通过API提供查询功能。&lt;/p>
&lt;h1 id="需求分析">需求分析&lt;/h1>
&lt;h2 id="目标需求">目标需求&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>爬取数据&lt;/strong>：从微博抓取公开话题数据，包括热门话题、用户信息（ID、昵称）、帖子内容、发布时间和点赞数。&lt;/li>
&lt;li>&lt;strong>数据存储&lt;/strong>：存到数据库，方便后续处理和查询。&lt;/li>
&lt;li>&lt;strong>API服务&lt;/strong>：搭一个后端API，让用户能查爬到的数据，比如按话题或用户ID查询。&lt;/li>
&lt;/ul>
&lt;h2 id="功能需求">功能需求&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>爬虫&lt;/strong>：支持多个话题的爬取，能翻页，抗封能力（后续会加代理，暂时没有）。&lt;/li>
&lt;li>&lt;strong>存储&lt;/strong>：使用MongoDB存储数据，加话题字段区分来源。&lt;/li>
&lt;li>&lt;strong>API&lt;/strong>：支持GET请求，按条件返回JSON。&lt;/li>
&lt;/ul>
&lt;h1 id="技术方案">技术方案&lt;/h1>
&lt;h2 id="技术">技术&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Python&lt;/strong>：核心语言，生态丰富。&lt;/li>
&lt;li>&lt;strong>Scrapy&lt;/strong>：爬虫框架，高效解析网页。&lt;/li>
&lt;li>&lt;strong>Scrapy-Redis&lt;/strong>：分布式扩展，用Redis做任务队列和去重。&lt;/li>
&lt;li>&lt;strong>MongoDB&lt;/strong>：NoSQL数据库，存JSON格式数据。&lt;/li>
&lt;li>&lt;strong>FastAPI&lt;/strong>：后端API框架，轻量、异步、自带文档。&lt;/li>
&lt;/ul>
&lt;h2 id="流程">流程&lt;/h2>
&lt;ul>
&lt;li>Redis塞初始URL → Scrapy爬取 → 数据存MongoDB。&lt;/li>
&lt;li>FastAPI连MongoDB → 响应用户请求。&lt;/li>
&lt;/ul>
&lt;h1 id="核心代码">核心代码&lt;/h1>
&lt;h2 id="实现爬虫功能weibopy">实现爬虫功能weibo.py&lt;/h2>
&lt;p>从Redis取URL，解析话题页，抓帖子，分页爬取，加异常处理。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> scrapy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> scrapy_redis.spiders &lt;span style="color:#f92672">import&lt;/span> RedisSpider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> WeiboScraper.items &lt;span style="color:#f92672">import&lt;/span> WeiboItem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> urllib.parse &lt;span style="color:#f92672">import&lt;/span> parse_qs, urlparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">WeiboSpider&lt;/span>(RedisSpider):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;weibo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> allowed_domains &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;s.weibo.com&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> redis_key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;weibo:start_urls&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>(self, response):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> response&lt;span style="color:#f92672">.&lt;/span>status &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Error: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>response&lt;span style="color:#f92672">.&lt;/span>url&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> 返回 &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>response&lt;span style="color:#f92672">.&lt;/span>status&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;URL:&amp;#34;&lt;/span>, response&lt;span style="color:#f92672">.&lt;/span>url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> topic &lt;span style="color:#f92672">=&lt;/span> parse_qs(urlparse(response&lt;span style="color:#f92672">.&lt;/span>url)&lt;span style="color:#f92672">.&lt;/span>query)&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;q&amp;#39;&lt;/span>, [&lt;span style="color:#e6db74">&amp;#39;unknown&amp;#39;&lt;/span>])[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> posts &lt;span style="color:#f92672">=&lt;/span> response&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;div.card-wrap&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> post &lt;span style="color:#f92672">in&lt;/span> posts:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item &lt;span style="color:#f92672">=&lt;/span> WeiboItem()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;user_id&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> post&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;a.name::attr(href)&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>get(default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;unknown&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;?&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;nickname&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> post&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;a.name::text&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>get(default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;unknown&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(post&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;p.txt::text&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>getall())&lt;span style="color:#f92672">.&lt;/span>strip() &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#e6db74">&amp;#39;N/A&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;post_time&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> post&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;p.from a:first-child::text&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>get(default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;N/A&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;likes&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> post&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;span.woo-like-count::text&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>get(default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item[&lt;span style="color:#e6db74">&amp;#39;topic&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> topic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">yield&lt;/span> item
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;解析错误: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>e&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 下一页&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> next_page &lt;span style="color:#f92672">=&lt;/span> response&lt;span style="color:#f92672">.&lt;/span>css(&lt;span style="color:#e6db74">&amp;#39;a.next::attr(href)&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>get()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> next_page:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">yield&lt;/span> scrapy&lt;span style="color:#f92672">.&lt;/span>Request(response&lt;span style="color:#f92672">.&lt;/span>urljoin(next_page), callback&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>parse)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="数据管道pipelinespy">数据管道：pipelines.py&lt;/h2>
&lt;p>连接MongoDB，存数据，关闭连接。&lt;/p></description></item></channel></rss>